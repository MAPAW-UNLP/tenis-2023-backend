<?php

namespace ContainerZSrnDDC;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_CVn232Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.c_vn232' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.c_vn232'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\CanchaController::addCancha' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\CanchaController::modCancha' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\PagosController::addPagos' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\PagosController::getPagos' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Controller\\PagosController::getPagosByPersonaId' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Controller\\PersonaController::addPersona' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\PersonaController::getAlumnos' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\PersonaController::getPersona' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\PersonaController::modPersona' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ProfesorController::addProfesor' => ['privates', '.service_locator.CGOCeSe', 'get_ServiceLocator_CGOCeSeService', true],
            'App\\Controller\\ProfesorController::getProfesor' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController::getReservas' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController::getReservasPorCanchasPorFecha' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController::getReservasTest' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController::liquidarReservas' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController::modClaseReserva' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController::modGrupoReserva' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController::modProfeReserva' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController::postReserva' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Controller\\UsuarioController::checkLogin' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'App\\Controller\\CanchaController:addCancha' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\CanchaController:modCancha' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\PagosController:addPagos' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\PagosController:getPagos' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Controller\\PagosController:getPagosByPersonaId' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Controller\\PersonaController:addPersona' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\PersonaController:getAlumnos' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\PersonaController:getPersona' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\PersonaController:modPersona' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ProfesorController:addProfesor' => ['privates', '.service_locator.CGOCeSe', 'get_ServiceLocator_CGOCeSeService', true],
            'App\\Controller\\ProfesorController:getProfesor' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController:getReservas' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController:getReservasPorCanchasPorFecha' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController:getReservasTest' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController:liquidarReservas' => ['privates', '.service_locator.T_NOTpo', 'get_ServiceLocator_TNOTpoService', true],
            'App\\Controller\\ReservaController:modClaseReserva' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController:modGrupoReserva' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController:modProfeReserva' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ReservaController:postReserva' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'App\\Controller\\UsuarioController:checkLogin' => ['privates', '.service_locator.wyNId4a', 'get_ServiceLocator_WyNId4aService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
        ], [
            'App\\Controller\\CanchaController::addCancha' => '?',
            'App\\Controller\\CanchaController::modCancha' => '?',
            'App\\Controller\\PagosController::addPagos' => '?',
            'App\\Controller\\PagosController::getPagos' => '?',
            'App\\Controller\\PagosController::getPagosByPersonaId' => '?',
            'App\\Controller\\PersonaController::addPersona' => '?',
            'App\\Controller\\PersonaController::getAlumnos' => '?',
            'App\\Controller\\PersonaController::getPersona' => '?',
            'App\\Controller\\PersonaController::modPersona' => '?',
            'App\\Controller\\ProfesorController::addProfesor' => '?',
            'App\\Controller\\ProfesorController::getProfesor' => '?',
            'App\\Controller\\ReservaController::getReservas' => '?',
            'App\\Controller\\ReservaController::getReservasPorCanchasPorFecha' => '?',
            'App\\Controller\\ReservaController::getReservasTest' => '?',
            'App\\Controller\\ReservaController::liquidarReservas' => '?',
            'App\\Controller\\ReservaController::modClaseReserva' => '?',
            'App\\Controller\\ReservaController::modGrupoReserva' => '?',
            'App\\Controller\\ReservaController::modProfeReserva' => '?',
            'App\\Controller\\ReservaController::postReserva' => '?',
            'App\\Controller\\UsuarioController::checkLogin' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\CanchaController:addCancha' => '?',
            'App\\Controller\\CanchaController:modCancha' => '?',
            'App\\Controller\\PagosController:addPagos' => '?',
            'App\\Controller\\PagosController:getPagos' => '?',
            'App\\Controller\\PagosController:getPagosByPersonaId' => '?',
            'App\\Controller\\PersonaController:addPersona' => '?',
            'App\\Controller\\PersonaController:getAlumnos' => '?',
            'App\\Controller\\PersonaController:getPersona' => '?',
            'App\\Controller\\PersonaController:modPersona' => '?',
            'App\\Controller\\ProfesorController:addProfesor' => '?',
            'App\\Controller\\ProfesorController:getProfesor' => '?',
            'App\\Controller\\ReservaController:getReservas' => '?',
            'App\\Controller\\ReservaController:getReservasPorCanchasPorFecha' => '?',
            'App\\Controller\\ReservaController:getReservasTest' => '?',
            'App\\Controller\\ReservaController:liquidarReservas' => '?',
            'App\\Controller\\ReservaController:modClaseReserva' => '?',
            'App\\Controller\\ReservaController:modGrupoReserva' => '?',
            'App\\Controller\\ReservaController:modProfeReserva' => '?',
            'App\\Controller\\ReservaController:postReserva' => '?',
            'App\\Controller\\UsuarioController:checkLogin' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
